import{_ as c}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as l,c as i,b as n,e as a,f as s,w as u,d as t}from"./app-f8877599.js";const r={},d=t(`<p>Users can extend the custom hook function through the Hook provided by Waline to realize custom functions. But if users want to share custom Hook methods, they can only use the copy method. To solve this problem, the Waline plugin system came into being.</p><h2 id="install-the-plugin" tabindex="-1"><a class="header-anchor" href="#install-the-plugin" aria-hidden="true">#</a> Install the plugin</h2><p>A new <code>plugins</code> attribute has been added to Waline&#39;s initial configuration, which supports configuring multiple plugins.</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// index.js</span>
<span class="token keyword">const</span> Waline <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@waline/vercel&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> HelloWorldPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@waline-plugins/hello-world&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">Waline</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>HelloWorldPlugin<span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>To install others&#39; plugin directly, you can also place plugin hooks direct in <code>plugins</code>:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// index.js</span>
<span class="token keyword">const</span> Waline <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@waline/vercel&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> HelloWorldPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@waline-plugins/hello-world&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">Waline</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">hooks</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token keyword">async</span> <span class="token function">postSave</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// do what ever you want after comment saved</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token literal-property property">middlewares</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">await</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="create-plugin" tabindex="-1"><a class="header-anchor" href="#create-plugin" aria-hidden="true">#</a> Create plugin</h2><h3 id="create-based-on-hook" tabindex="-1"><a class="header-anchor" href="#create-based-on-hook" aria-hidden="true">#</a> Create based on Hook</h3>`,8),k=t(`<div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">hooks</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token keyword">async</span> <span class="token function">postSave</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// do what ever you want after comment saved</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p>It should be noted that if the user installs multiple Hook plugins, the execution of the same hook function is executed in the order in which the plugins are installed. If the pre-hook method returns early, no subsequent operations will be performed.</p><h3 id="create-based-on-middleware" tabindex="-1"><a class="header-anchor" href="#create-based-on-middleware" aria-hidden="true">#</a> Create based on middleware</h3>`,3),h={href:"https://koajs.com",target:"_blank",rel:"noopener noreferrer"},m=t(`<p>If you don&#39;t know what Koa middleware is, you can search for it first. What you need to pay attention to when using the middleware mode to make plug-ins is that the callback method must write the execution of <code>await next()</code>, otherwise the follow-up operations will not be executed.</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">middlewares</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">await</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p>Of course, you can put the logic of Hook-type plug-ins and middleware-type plug-ins together, and Waline supports them.</p><h3 id="list-of-plugins" tabindex="-1"><a class="header-anchor" href="#list-of-plugins" aria-hidden="true">#</a> List of plugins</h3><p>Welcome to submit plugins~</p>`,5),g={href:"https://github.com/walinejs/plugins/tree/master/packages/hello-world",target:"_blank",rel:"noopener noreferrer"},v={href:"https://github.com/walinejs/plugins/tree/master/packages/privacy",target:"_blank",rel:"noopener noreferrer"},f={href:"https://github.com/walinejs/plugins/tree/master/packages/tencent-tms",target:"_blank",rel:"noopener noreferrer"};function w(b,y){const p=o("RouterLink"),e=o("ExternalLinkIcon");return l(),i("div",null,[d,n("p",null,[a("It's easy to build a plugin. A plugin is contained by a collection of "),s(p,{to:"/en/reference/server/config.html#hooks"},{default:u(()=>[a("hooks.")]),_:1})]),k,n("p",null,[a("If Hook can't meet your needs, you can use a more powerful middleware mode to customize development. The bottom layer of Waline uses the Node.js framework "),n("a",h,[a("Koa"),s(e)]),a(", and we expose Koa's middleware configuration as a whole, which can meet various customization needs of advanced developers.")]),m,n("ul",null,[n("li",null,[n("a",g,[a("@waline-plugins/hello-world"),s(e)])]),n("li",null,[n("a",v,[a("@waline-plugins/privacy"),s(e)])]),n("li",null,[n("a",f,[a("@waline-plugins/tencent-tms"),s(e)])])])])}const j=c(r,[["render",w],["__file","plugin.html.vue"]]);export{j as default};
