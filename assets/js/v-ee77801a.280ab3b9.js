(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[318],{7246:(e,t,a)=>{"use strict";a.r(t),a.d(t,{data:()=>n});const n={key:"v-ee77801a",path:"/en/reference/instance.html",title:"Client instance",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"el",slug:"el",children:[]},{level:2,title:"update",slug:"update",children:[]},{level:2,title:"destory",slug:"destory",children:[]}],filePathRelative:"en/reference/instance.md",git:{updatedTime:1629166118e3,contributors:[]}}},864:(e,t,a)=>{"use strict";a.r(t),a.d(t,{default:()=>d});const n=(0,a(8917).uE)('<h1 id="client-instance" tabindex="-1"><a class="header-anchor" href="#client-instance" aria-hidden="true">#</a> Client instance</h1><h2 id="el" tabindex="-1"><a class="header-anchor" href="#el" aria-hidden="true">#</a> el</h2><p>The DOM element object mounted by the current instance</p><h2 id="update" tabindex="-1"><a class="header-anchor" href="#update" aria-hidden="true">#</a> update</h2><p>Type: <code>(options: Partial&lt;Omit&lt;WalineOptions,&#39;el&#39; |&#39;dark&#39;&gt;&gt;) =&gt; void</code></p><p>An optional parameter can be passed in as the configuration object that needs to be updated. All initialization options are available except for <code>el</code> and <code>dark</code>.</p><h2 id="destory" tabindex="-1"><a class="header-anchor" href="#destory" aria-hidden="true">#</a> destory</h2><p>Type: <code>() =&gt; void</code></p><p>Destroy the current Waline instance, and clear all contents in the current Waline mounted element.</p>',9),d={render:function(e,t){return n}}}}]);