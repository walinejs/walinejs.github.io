import{_ as r,X as k,Y as d,Z as v,$ as n,a1 as s,a2 as t,a3 as a,a0 as m,C as c}from"./framework-4b90706e.js";const g={},f=n("p",null,"Waline 官方客户端提供多种版本的文件。你可以通过多种方式引入并使用官方客户端。",-1),h=n("h2",{id:"npm-包",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#npm-包","aria-hidden":"true"},"#"),s(" NPM 包")],-1),w=n("code",null,"@waline/client",-1),b={href:"https://www.npmjs.com/package/@waline/client",target:"_blank",rel:"noopener noreferrer"},_=n("div",{class:"language-bash","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"pnpm"),s(),n("span",{class:"token function"},"add"),s(),n("span",{class:"token parameter variable"},"-D"),s(` @waline/client
`)])])],-1),y=n("div",{class:"language-bash","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"npm"),s(" i "),n("span",{class:"token parameter variable"},"-D"),s(` @waline/client
`)])])],-1),x=n("div",{class:"language-bash","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"yarn"),s(),n("span",{class:"token function"},"add"),s(),n("span",{class:"token parameter variable"},"-D"),s(` @waline/client
`)])])],-1),R=n("code",null,"@waline/client",-1),W=n("h2",{id:"在普通项目中导入",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#在普通项目中导入","aria-hidden":"true"},"#"),s(" 在普通项目中导入")],-1),I=n("p",null,[s("以下是一个在普通的网站项目中导入并使用 "),n("code",null,"@waline/client"),s(" 的示例。")],-1),j=n("div",{class:"language-typescript","data-ext":"ts"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" init "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'@waline/client'"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token string"},"'@waline/client/dist/waline.css'"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token function"},"init"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(`
  el`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'#waline'"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token comment"},"// ..."),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])])],-1),L=n("div",{class:"language-javascript","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" init "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'@waline/client'"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token string"},"'@waline/client/dist/waline.css'"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token function"},"init"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token literal-property property"},"el"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'#waline'"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token comment"},"// ..."),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])])],-1),V=n("h2",{id:"在-vue-项目中导入",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#在-vue-项目中导入","aria-hidden":"true"},"#"),s(" 在 Vue 项目中导入")],-1),E=n("p",null,[s("由于 "),n("code",null,"@waline/client"),s(" 本身基于 Vue3，因此我们直接导出了一个响应式的 Vue 组件。")],-1),q=m(`<details class="hint-container details"><summary>案例</summary><div class="language-vue" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Waline</span> <span class="token attr-name">:serverURL</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>serverURL<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>path<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> Waline <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@waline/client/component&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> computed <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useRoute <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-router&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> serverURL <span class="token operator">=</span> <span class="token string">&#39;https://waline.vercel.app&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">useRoute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>由于我们使用了响应式的 <code>path</code>，当路由变动时，<code>@waline/client</code> 会自动刷新并显示相应路由的评论。</p></details><h2 id="在-react-项目中导入" tabindex="-1"><a class="header-anchor" href="#在-react-项目中导入" aria-hidden="true">#</a> 在 React 项目中导入</h2><p>只需要简单的包装，你就可以将 Waline 转为 React 组件:</p><div class="language-tsx line-numbers-mode" data-ext="tsx"><pre class="language-tsx"><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useEffect<span class="token punctuation">,</span> useRef <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> init <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@waline/client&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> WalineInstance<span class="token punctuation">,</span> WalineInitOptions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@waline/client&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">WalineOptions</span> <span class="token operator">=</span> Omit<span class="token operator">&lt;</span>WalineInitOptions<span class="token punctuation">,</span> <span class="token string">&#39;el&#39;</span><span class="token operator">&gt;</span> <span class="token operator">&amp;</span> <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">Waline</span> <span class="token operator">=</span> <span class="token punctuation">(</span>props<span class="token operator">:</span> WalineOptions<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> walineInstanceRef <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useRef</span><span class="token generic class-name"><span class="token operator">&lt;</span>WalineInstance <span class="token operator">|</span> <span class="token keyword">null</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> containerRef <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">createRef</span><span class="token generic class-name"><span class="token operator">&lt;</span>HTMLDivElement<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    walineInstanceRef<span class="token punctuation">.</span>current <span class="token operator">=</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token operator">...</span>props<span class="token punctuation">,</span>
      el<span class="token operator">:</span> containerRef<span class="token punctuation">.</span>current<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> walineInstanceRef<span class="token punctuation">.</span>current<span class="token operator">?.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    walineInstanceRef<span class="token punctuation">.</span>current<span class="token operator">?.</span><span class="token function">update</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> props<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>containerRef<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function C(N,A){const u=c("ExternalLinkIcon"),l=c("CodeTabs"),i=c("RouterLink");return k(),d("div",null,[f,v(" more "),h,n("p",null,[s("Waline 官方客户端已通过 "),w,s(" 发布到 "),n("a",b,[s("npm"),t(u)]),s("，你可以通过以下命令安装:")]),t(l,{id:"10",data:[{title:"pnpm"},{title:"npm"},{title:"yarn"}],"tab-id":"shell"},{tab0:a(({title:e,value:p,isActive:o})=>[_]),tab1:a(({title:e,value:p,isActive:o})=>[y]),tab2:a(({title:e,value:p,isActive:o})=>[x]),_:1}),n("p",null,[s("有关于 "),R,s(" 导出的模块，详见 "),t(i,{to:"/reference/client/file.html"},{default:a(()=>[s("客户端参考 → 文件")]),_:1}),s("。")]),W,I,t(l,{id:"30",data:[{title:"TS"},{title:"JS"}],"tab-id":"lang"},{tab0:a(({title:e,value:p,isActive:o})=>[j]),tab1:a(({title:e,value:p,isActive:o})=>[L]),_:1}),V,E,n("p",null,[s("组件的所有属性都是响应式的，你可以在 "),t(i,{to:"/reference/client/props.html"},{default:a(()=>[s("客户端参考 → 组件属性")]),_:1}),s(" 找到全部支持的属性。")]),q])}const T=r(g,[["render",C],["__file","project.html.vue"]]);export{T as default};
