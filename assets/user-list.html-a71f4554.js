import{_ as o,Y as c,Z as l,$ as u,a0 as n,a2 as s,a3 as t,a4 as p,a1 as e,F as i}from"./framework-0d72886b.js";const r={},k=n("p",null,"Waline supports displaying users rank list or users wall by widget, which is convenient for displaying the commentor's info in the sidebar of the blog.",-1),d=n("h2",{id:"component-options",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#component-options","aria-hidden":"true"},"#"),s(" Component options")],-1),g=n("p",null,[s("The users rank list/users wall widget is named "),n("code",null,"UserList"),s(" and contains six options:")],-1),h=e("<li><code>el</code> (optional): the element to be mounted</li><li><code>serverURL</code>: server link</li><li><code>count</code> The number of users needed to get</li><li><code>mode</code>: <code>list</code> means users rank list, <code>wall</code> means users wall</li>",4),m=n("code",null,"lang",-1),f=n("code",null,"locale",-1),y=e(`<p>The data format returned by the component should be <code>Promise&lt;{ users: WalineUser[], destroy: () =&gt; void }&gt;</code>.</p><ul><li><code>users</code> property: an array of the user list with exact number of <code>count</code></li><li><code>destroy</code> method: a function which will destroy the widget</li></ul><h2 id="basic-usage" tabindex="-1"><a class="header-anchor" href="#basic-usage" aria-hidden="true">#</a> Basic usage</h2><h3 id="users-rank-list" tabindex="-1"><a class="header-anchor" href="#users-rank-list" aria-hidden="true">#</a> Users Rank List</h3><div class="language-html" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>waline-users<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>module<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span> UserList <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;https://cdn.jsdelivr.net/npm/@waline/client/dist/waline.mjs&#39;</span><span class="token punctuation">;</span>

  <span class="token function">UserList</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;#waline-users&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">serverURL</span><span class="token operator">:</span> <span class="token string">&#39;http://waline.vercel.app&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h3 id="users-wall" tabindex="-1"><a class="header-anchor" href="#users-wall" aria-hidden="true">#</a> Users Wall</h3><div class="language-html" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>waline-users<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>module<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span> UserList <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;https://cdn.jsdelivr.net/npm/@waline/client/dist/waline.mjs&#39;</span><span class="token punctuation">;</span>

  <span class="token function">UserList</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;#waline-users&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">serverURL</span><span class="token operator">:</span> <span class="token string">&#39;http://waline.vercel.app&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span>
    <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">&#39;wall&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h2 id="advanced-usage" tabindex="-1"><a class="header-anchor" href="#advanced-usage" aria-hidden="true">#</a> Advanced usage</h2><p>If you are not satisfied with the default output format, you can call the component by omitting the <code>el</code> option to get the data and render it yourself.</p><p>Example:</p><div class="language-html" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>waline-users<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>module<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span> UserList <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;https://cdn.jsdelivr.net/npm/@waline/client/dist/waline.mjs&#39;</span><span class="token punctuation">;</span>

  <span class="token function">UserList</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">serverURL</span><span class="token operator">:</span> <span class="token string">&#39;http://waline.vercel.app&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> users <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;waline-users&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> users<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>
        <span class="token punctuation">(</span><span class="token parameter">user</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;a href=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>user<span class="token punctuation">.</span>link<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>user<span class="token punctuation">.</span>nick<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/a&gt;</span><span class="token template-punctuation string">\`</span></span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div>`,11);function v(w,_){const a=i("RouterLink");return c(),l("div",null,[k,u(" more "),d,g,n("ul",null,[h,n("li",null,[m,s(": i18n support, more ref to "),t(a,{to:"/en/guide/features/i18n.html"},{default:p(()=>[s("i18n")]),_:1})]),n("li",null,[f,s(": customize the language, more ref to "),t(a,{to:"/en/guide/features/i18n.html"},{default:p(()=>[s("i18n")]),_:1})])]),y])}const b=o(r,[["render",v],["__file","user-list.html.vue"]]);export{b as default};
