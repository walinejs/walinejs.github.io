import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as a,c as t,f as s,a as e,e as o}from"./app.06464a3a.js";const p={},c=e("p",null,"Waline supports displaying the number of comments separately in the non-comment area.",-1),l=o(`<h2 id="automatically-update" tabindex="-1"><a class="header-anchor" href="#automatically-update" aria-hidden="true">#</a> Automatically Update</h2><p>You can enable comment counting in the <code>init</code> function by setting the <code>comment</code> option to <code>true</code>.</p><div class="language-javascript ext-js"><pre class="language-javascript"><code>Waline<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;#waline&#39;</span><span class="token punctuation">,</span>
  <span class="token comment">// ...</span>
  <span class="token literal-property property">comment</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// comment counting</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>Waline will automatically find the elements with the <code>class</code> value of <code>waline-comment-count</code> in the page, and get their <code>data-path</code> as the query condition. And fill it with the obtained value:</p><div class="language-html ext-html"><pre class="language-html"><code><span class="token comment">&lt;!-- data-path will be the query condition --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">data-path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>&lt;Your/Path/Name&gt;<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>waline-comment-count<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span> comments
</code></pre></div><p>If you need a different selector, you can set the <code>comment</code> option to that selector.</p><p>Every time you call <code>WalineInstance.update()</code>, Waline will search the page content and automatically update the comment count.</p><div class="custom-container tip"><p class="custom-container-title">Examples</p><div class="language-html ext-html"><pre class="language-html"><code>The current page has
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">data-path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/en/guide/client/count.html<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>waline-comment-count<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
comments.
</code></pre></div><p>The current page has <span data-path="/en/guide/client/count.html" class="waline-comment-count"></span> comments.</p></div><h2 id="manual-update" tabindex="-1"><a class="header-anchor" href="#manual-update" aria-hidden="true">#</a> Manual Update</h2><p>Besides automatically update via the <code>init</code> function, you can manually update the current page&#39;s comment count via the <code>commentCount</code> API:</p><div class="language-javascript ext-js"><pre class="language-javascript"><code>Waline<span class="token punctuation">.</span><span class="token function">commentCount</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  serverURL<span class="token punctuation">,</span>
  path<span class="token punctuation">,</span>

  <span class="token comment">// optional, for custom selectors, defaults to \`&#39;.waline-pageview-count&#39;\`</span>
  <span class="token comment">// selector: &#39;waline-pageview-count&#39;,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><div class="custom-container info"><p class="custom-container-title">Aborting</p><p>Since the comment count fetch is an asynchronous network operation, you may need to cancel an ongoing comment count update operation in certain circumstances.</p><p><code>commentCount</code> returns a function that can be called to cancel the update:</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> abort <span class="token operator">=</span> Waline<span class="token punctuation">.</span><span class="token function">commentCount</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">serverURL</span><span class="token operator">:</span> <span class="token string">&#39;&lt;YOUR_SERVER_URL&gt;&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">path</span><span class="token operator">:</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>pathname<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// After 500ms, if the network request has not been completed, cancel this operation</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div></div>`,12);function u(i,r){return a(),t("div",null,[c,s(" more "),l])}const k=n(p,[["render",u],["__file","comment.html.vue"]]);export{k as default};
