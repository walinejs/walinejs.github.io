import{_ as e,X as a,Y as n,a0 as c}from"./framework-4b90706e.js";const d={},i=c(`<h2 id="api-更改" tabindex="-1"><a class="header-anchor" href="#api-更改" aria-hidden="true">#</a> API 更改</h2><p>我们取消了 Waline 的默认导出，进而提供下列导出:</p><ul><li><code>init</code>: 行为模式同旧的 <code>Waline</code></li><li><code>version</code>: 版本号</li><li><code>commentCount</code>: 更新评论数</li><li><code>pageviewCount</code>: 更新访问数</li><li><code>RecentComments</code>: 最近评论</li></ul><p>我们将 Waline 的默认导出改为 <code>init</code> 命名导出，同时为了使 Waline SSR 友好，V2 将 CSS 单独输出。</p><p>在大多数情况下，这只意味着下列更改:</p><div class="language-diff" data-ext="diff"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> &lt;script src=&#39;//cdn.jsdelivr.net/npm/@waline/client&#39;&gt;&lt;/script&gt;
</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> &lt;script src=&#39;//unpkg.com/@waline/client@v2/dist/waline.js&#39;&gt;&lt;/script&gt;
</span><span class="token prefix inserted">+</span><span class="token line"> &lt;link href=&#39;//unpkg.com/@waline/client@v2/dist/waline.css&#39; rel=&#39;stylesheet&#39; /&gt;
</span></span>
<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> &lt;script&gt;
</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  Waline({
</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  Waline.init({
</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">   el: &#39;#waline&#39;,
</span><span class="token prefix unchanged"> </span><span class="token line">   serverURL: &#39;YOUR SERVER URL&#39;
</span><span class="token prefix unchanged"> </span><span class="token line"> });
</span><span class="token prefix unchanged"> </span><span class="token line"> &lt;/script&gt;
</span></span></code></pre></div><h2 id="新增选项" tabindex="-1"><a class="header-anchor" href="#新增选项" aria-hidden="true">#</a> 新增选项</h2><ul><li><code>comment</code> 选项支持设置字符串作为 CSS 选择器。</li><li><code>pageview</code> 选项支持设置字符串作为 CSS 选择器。</li></ul><h2 id="选项重命名" tabindex="-1"><a class="header-anchor" href="#选项重命名" aria-hidden="true">#</a> 选项重命名</h2><ul><li><p><code>uploadImage</code> 更名为 <code>imageUploader</code></p></li><li><p><code>highlight</code> 更名为 <code>highlighter</code></p></li><li><p><code>previewMath</code> 更名为 <code>texRenderer</code></p></li><li><p><code>visitor</code> 更名为 <code>pageview</code></p></li></ul><h2 id="选项移除" tabindex="-1"><a class="header-anchor" href="#选项移除" aria-hidden="true">#</a> 选项移除</h2><p>以下选项已在 V1 中长时间标记为废弃 API，它们已在 V2 中移除。</p><ul><li><code>langMode</code>: 使用 <code>locales</code></li><li><code>placeholder</code>: 使用 <code>locales.placeholder</code></li><li><code>emojiCDN</code>: 使用 <code>emoji</code></li><li><code>emojiMaps</code>: 使用 <code>emoji</code></li><li><code>requiredFields</code>: 使用 <code>requiredMeta</code></li><li><code>avatar</code>: 使用服务端变量 <code>AVATAR_PROXY</code></li><li><code>avatarCDN</code>: 使用服务端变量 <code>AVATAR_PROXY</code></li><li><code>avatarForce</code>: 默认刷新</li><li><code>anonymous</code>: 使用 <code>login</code></li><li><code>mathTagSupport</code>: 不再需要</li><li><code>copyRight</code>: 使用 <code>copyright</code></li></ul><h2 id="其他变更" tabindex="-1"><a class="header-anchor" href="#其他变更" aria-hidden="true">#</a> 其他变更</h2><h3 id="实例变更" tabindex="-1"><a class="header-anchor" href="#实例变更" aria-hidden="true">#</a> 实例变更</h3><p>现在 <code>Waline.init</code> 会在 <code>el</code>, <code>serverURL</code> 两个必填属性非法时直接抛出错误，而不是返回一个错误实例表明原因。</p><p>你可以使用 <code>try { ... } catch (err) { ... }</code> 块来捕获错误以更好的兼容用户配置错误的情况。</p><h3 id="更新行为变更" tabindex="-1"><a class="header-anchor" href="#更新行为变更" aria-hidden="true">#</a> 更新行为变更</h3><ul><li>Waline 现在支持通过 <code>Instance.update</code> 更新 <code>el</code> 选项之外的所有选项。</li><li><code>path</code> 参数在 <code>update()</code> 时会被重置，这意味着只要你不传入 <code>path</code>，它就会被重置为 <code>window.location.pathname</code>。</li></ul><h3 id="评论与浏览量选择器变更" tabindex="-1"><a class="header-anchor" href="#评论与浏览量选择器变更" aria-hidden="true">#</a> 评论与浏览量选择器变更</h3><p>现在，评论与浏览量关于 Valine 的选择器兼容已被移除。</p><ul><li>评论选择器默认为 <code>&#39;.waline-comment-count&#39;</code></li><li>浏览量选择器默认为 <code>&#39;.waline-pageview-count&#39;</code></li></ul><p>如果你需要为某个选择器获取不同于当前页面的对应值时，强烈建议使用 <code>data-path</code> 属性。</p><p>为了兼容性，我们仍然保留先前的 <code>id</code> 属性支持，但此兼容会在 V3 移除。</p><h3 id="css-类变更" tabindex="-1"><a class="header-anchor" href="#css-类变更" aria-hidden="true">#</a> CSS 类变更</h3><p>所有 CSS 类从 <code>v</code> 开头改为 <code>wl-</code> 开头。</p>`,26),o=[i];function s(l,t){return a(),n("div",null,o)}const r=e(d,[["render",s],["__file","client.html.vue"]]);export{r as default};
