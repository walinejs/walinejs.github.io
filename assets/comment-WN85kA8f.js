const h=e=>`${e.replace(/\/?$/,"/")}api/`,g=(e,n="")=>{if(typeof e=="object"&&e.errno)throw new TypeError(`${n} failed with ${e.errno}: ${e.errmsg}`);return e},i=({serverURL:e,lang:n,paths:t,signal:o})=>fetch(`${h(e)}comment?type=count&url=${encodeURIComponent(t.join(","))}&lang=${n}`,{signal:o}).then(r=>r.json()).then(r=>g(r,"Get comment count").data),p=e=>{try{e=decodeURI(e)}catch{}return e},u=(e="")=>e.replace(/\/$/u,""),m=e=>/^(https?:)?\/\//.test(e),$=e=>{const n=u(e);return m(n)?n:`https://${n}`},d=e=>{e.name!=="AbortError"&&console.error(e.message)},f=e=>{const{path:n}=e.dataset;return n!=null&&n.length?n:null},w=({serverURL:e,path:n=window.location.pathname,selector:t=".waline-comment-count",lang:o=navigator.language})=>{const r=new AbortController,a=document.querySelectorAll(t);return a.length&&i({serverURL:$(e),paths:Array.from(a).map(l=>p(f(l)??n)),lang:o,signal:r.signal}).then(l=>{a.forEach((c,s)=>{c.innerText=l[s].toString()})}).catch(d),r.abort.bind(r)};export{w as v};
